GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub
Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. Напротив каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. - создал
 5. Клонировать репозиторий JSON на локальный компьютер. - git clone https://github.com/KirillStepanovQA/JSON.git
 6. Внутри локального JSON создать файл “new.json”. - touch new.json
 7. Добавить файл под гит. - git add new.json
 8. Закоммитить файл. - git commit –m “create new.json”
 9. Отправить файл на внешний GitHub репозиторий. - git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - cat >> new.json, редактирую, Enter, Ctrl + C
 11. Отправить изменения на внешний репозиторий. - git add . , git commit -m "first version of new.json", git push
 12. Создать файл preferences.json - touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. - vim preferences.json, I, Esc, :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - touch skills.json, vim skills.json, I, Esc, :wq
 15. Отправить сразу 2 файла на внешний репозиторий. - git add . , git commit -m "2 new files", git push
 16. На веб интерфейсе создать файл bug_report.json. - создал
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - сделал
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. - сделал
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - сделал
 20. Синхронизировать внешний и локальный репозиторий JSON - git pull


XML
 21. Создать внешний репозиторий c названием XML. - сделал
 22. Клонировать репозиторий XML на локальный компьютер. - git clone https://github.com/KirillStepanovQA/XML.git
 23. Внутри локального XML создать файл “new.xml”. - touch new.xml
 24. Добавить файл под гит. - git add new.xml
 25. Закоммитить файл. - git commit -m "create new.xml"
 26. Отправить файл на внешний GitHub репозиторий. - git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. - vim new.xml, I, Esc, :wq
 28. Отправить изменения на внешний репозиторий. - git add . , git commit -m "first version of new.xml", git push
 29. Создать файл preferences.xml - touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. - vim preferences.xml, I, Esc, :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - touch skills.xml, vim skills.xml, I, Esc, :wq
 32. Сделать коммит в одну строку. - git add ., git commit -m "2 new files"
 33. Отправить сразу 2 файла на внешний репозиторий. - git push
 34. На веб интерфейсе создать файл bug_report.xml. - создал
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - сделал
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. - сделал
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - сделал
 38. Синхронизировать внешний и локальный репозиторий XML. - git pull